@page "/Carrera"

<PageTitle>Carrera</PageTitle>

<div class="table-container" style="overflow: hidden; box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); margin-bottom: 20px;">
    <div style="border-top-left-radius: 12px; border-top-right-radius: 12px; background-color: #f2f2f2; padding: 10px;">
        <button class="btn btn-success" @onclick="OpenModalToAdd">Cargar Carrera</button>
        <table class="table" style="border-collapse: collapse; width: 100%; border: 2px solid #ddd; margin-top: 10px;">
            <thead>
                <tr style="border-bottom: 2px solid #ddd;">
                    <th>Nombre</th>
                    <th>Plan</th>
                    <th>Fecha Inicio</th>
                    <th>Fecha Fin</th>
                    <th>Accion</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var carrera in carreras)
                {
                    <tr>
                        <td style="border-right: 2px solid #ddd; border-bottom: 2px solid #ddd;">@carrera.Nombre</td>
                        <td style="border-right: 2px solid #ddd; border-bottom: 2px solid #ddd;">@carrera.Plan</td>
                        <td style="border-right: 2px solid #ddd; border-bottom: 2px solid #ddd;">@carrera.FechaInicio.ToShortDateString()</td>
                        <td style="border-right: 2px solid #ddd; border-bottom: 2px solid #ddd;">@carrera.FechaFin.ToShortDateString()</td>
                        <td style="border-bottom: 2px solid #ddd;">
                            <div class="action-buttons m-1">
                                <button class="btn btn-primary me-2" @onclick="() => OpenModalToEdit(carrera)"><i class="oi oi-pencil"></i></button>
                                <button class="btn btn-danger" @onclick="() => OpenConfirmDeleteModal(carrera)"><i class="oi oi-trash"></i></button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Modal para agregar y editar carreras -->
@if (isModalOpen)
{
    <div class="modal fade show d-block" style="background-color: rgba(0, 0, 0, 0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@(isEdit ? "Editar Carrera" : "Agregar Carrera")</h5>
                    <button type="button" class="btn-close" @onclick="CloseModal"></button>
                </div>
                <div class="modal-body">
                    <EditForm Model="@currentCarrera" OnValidSubmit="@(isEdit ? EditCarrera : AddCarrera)">
                        <DataAnnotationsValidator />
                        <div class="mb-3">
                            <label class="form-label">Nombre</label>
                            <InputText class="form-control" @bind-Value="currentCarrera.Nombre" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Plan</label>
                            <InputText class="form-control" @bind-Value="currentCarrera.Plan" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Fecha Inicio</label>
                            <InputDate class="form-control" @bind-Value="currentCarrera.FechaInicio" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Fecha Fin</label>
                            <InputDate class="form-control" @bind-Value="currentCarrera.FechaFin" />
                        </div>
                        <button type="submit" class="btn btn-primary">@((isEdit) ? "Guardar Cambios" : "Agregar Carrera")</button>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}

<!-- Modal para confirmar eliminación -->
@if (isConfirmDeleteModalOpen)
{
    <div class="modal fade show d-block" style="background-color: rgba(0, 0, 0, 0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirmar Eliminación</h5>
                    <button type="button" class="btn-close" @onclick="CloseConfirmDeleteModal"></button>
                </div>
                <div class="modal-body">
                    ¿Estás seguro de que deseas eliminar esta carrera?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CloseConfirmDeleteModal">Cancelar</button>
                    <button type="button" class="btn btn-danger" @onclick="DeleteCarrera">Eliminar</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<Carreras> carreras = new List<Carreras>
    {
        new Carreras { Nombre = "Desarrollo de Software", Plan = "2024/22", FechaInicio = new DateTime(2021, 3, 1), FechaFin = new DateTime(2024, 3, 1) },
        new Carreras { Nombre = "Enfermería", Plan = "1122/12", FechaInicio = new DateTime(2021, 3, 1), FechaFin = new DateTime(2024, 3, 1) }
    };

    private bool isModalOpen = false;
    private bool isEdit = false;
    private Carreras currentCarrera = new Carreras();
    private Carreras carreraToDelete;
    private bool isConfirmDeleteModalOpen = false;

    private void OpenModalToAdd()
    {
        currentCarrera = new Carreras();
        isEdit = false;
        isModalOpen = true;
    }

    private void OpenModalToEdit(Carreras carrera)
    {
        currentCarrera = new Carreras
            {
                Nombre = carrera.Nombre,
                Plan = carrera.Plan,
                FechaInicio = carrera.FechaInicio,
                FechaFin = carrera.FechaFin
            };
        isEdit = true;
        isModalOpen = true;
    }

    private void CloseModal()
    {
        isModalOpen = false;
    }

    private void AddCarrera()
    {
        carreras.Add(currentCarrera);
        CloseModal();
    }

    private void EditCarrera()
    {
        var carrera = carreras.FirstOrDefault(c => c.Nombre == currentCarrera.Nombre && c.Plan == currentCarrera.Plan);
        if (carrera != null)
        {
            carrera.Nombre = currentCarrera.Nombre;
            carrera.Plan = currentCarrera.Plan;
            carrera.FechaInicio = currentCarrera.FechaInicio;
            carrera.FechaFin = currentCarrera.FechaFin;
        }
        CloseModal();
    }

    private void OpenConfirmDeleteModal(Carreras carrera)
    {
        carreraToDelete = carrera;
        isConfirmDeleteModalOpen = true;
    }

    private void CloseConfirmDeleteModal()
    {
        isConfirmDeleteModalOpen = false;
    }

    private void DeleteCarrera()
    {
        carreras.Remove(carreraToDelete);
        CloseConfirmDeleteModal();
    }

    public class Carreras
    {
        public string Nombre { get; set; }
        public string Plan { get; set; }
        public DateTime FechaInicio { get; set; }
        public DateTime FechaFin { get; set; }
    }
}
