@page "/cargar-notas"
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Gestión de Notas</h3>

<!-- Botón para abrir el modal -->
<button class="btn btn-primary" @onclick="AbrirModal">Cargar Nota</button>

<!-- Modal -->
<div class="modal fade" id="notaModal" tabindex="-1" aria-labelledby="notaModalLabel" aria-hidden="true" style="display:@(mostrarModal ? "block" : "none");">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="notaModalLabel">Cargar Nota</h5>
                <button type="button" class="btn-close" @onclick="CerrarModal"></button>
            </div>
            <div class="modal-body">
                <EditForm Model="@nota" OnValidSubmit="@GuardarNota">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-group">
                        <label for="alumno">Alumno</label>
                        <select id="alumno" class="form-control" @bind="nota.DivsionCiclosMateriaAlumnosIdDivCicMatAlum">
                            <option value="">Seleccione un alumno</option>
                            @foreach (var alumno in alumnos)
                            {
                                <option value="@alumno.IdDivCicMatAlum">@alumno.Alumnos.Nombre</option>
                            }
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="tipoEvaluacion">Tipo de Evaluación</label>
                        <select id="tipoEvaluacion" class="form-control" @bind="nota.TipoEvaluacionIdTipoEva">
                            <option value="">Seleccione una evaluación</option>
                            @foreach (var tipoEva in tipoEvaluaciones)
                            {
                                <option value="@tipoEva.IdTipoEva">@tipoEva.NombreEva</option>
                            }
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="nota">Nota</label>
                        <input type="number" id="nota" class="form-control" @bind="nota.Nota" min="0" max="10" />
                    </div>

                    <div class="form-group">
                        <label for="fecha">Fecha</label>
                        <input type="date" id="fecha" class="form-control" @bind="nota.Fecha" />
                    </div>

                    <button type="submit" class="btn btn-primary">Guardar Nota</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    private Notas nota = new Notas();
    private List<DivsionCiclosMateriaAlumnos> alumnos = new List<DivsionCiclosMateriaAlumnos>();
    private List<TipoEvaluacion> tipoEvaluaciones = new List<TipoEvaluacion>();
    private bool mostrarModal = false;

    protected override async Task OnInitializedAsync()
    {
        alumnos = await Http.GetFromJsonAsync<List<DivsionCiclosMateriaAlumnos>>("api/DivisionCicloMateriaAlumnos");
        tipoEvaluaciones = await Http.GetFromJsonAsync<List<TipoEvaluacion>>("api/TipoNota");
    }

    private void AbrirModal()
    {
        mostrarModal = true;
    }

    private void CerrarModal()
    {
        mostrarModal = false;
    }

    private async Task GuardarNota()
    {
        var response = await Http.PostAsJsonAsync("api/Notas", nota);
        if (response.IsSuccessStatusCode)
        {
            CerrarModal();
            Navigation.NavigateTo("/notas");
        }
        else
        {
            // Manejar errores
        }
    }
}

