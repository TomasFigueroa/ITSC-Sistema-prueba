@inherits LayoutComponentBase
@using INTITUTO1.Client.Auth;
@using Microsoft.AspNetCore.Components.Authorization;
@inject AuthenticationStateProvider autenticacionProvider
@inject NavigationManager navManager

<div class="page">
    
    <div style="background-color: #212529;">
        
        @*  condicional *@
        @if (!IsLoginPage)
        {
            <NavMenu />
        }
    </div>

    <main>
        <div class="top-row ps-4 px-3 navbar" style="background-color: #141619; display: flex; justify-content: flex-end; align-items: center;">
            <div class="oi-account-logout px-4 text-center">
                <a @onclick="CerrarSesion" href="javascript:void(0)" class="logout-link">Cerrar Sesión</a>
            </div>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>

</div>


@code {

    private bool IsLoginPage;

    protected override void OnParametersSet()
    {
       
    }
    private async Task CerrarSesion()
    {
        var autenticacionExt = (AutenticacionExtension)autenticacionProvider;
        await autenticacionExt.ActualizarEstadoAutenticacion(null);
        navManager.NavigateTo("/", true);
    }
}


